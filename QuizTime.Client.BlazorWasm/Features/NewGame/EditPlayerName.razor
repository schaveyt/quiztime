@using QuizTime.Client.BlazorWasm.Shared.UI.Element
@using QuizTime.Shared.Data
@inherits QuizTime.Client.BlazorWasm.Shared.UI.SettingsStateComponentBase

<div class="flex flex-col divide-y divide-@(SettingsState.ThemeColorString)-500 text-@(SettingsState.ThemeColorString)-800">
    <div class="pb-2 text-2xl flex-none font-semibold">Edit Player Name</div>
    <EditForm Model="@Player" OnValidSubmit="@HandleValidSubmit" class="pt-3 flex-auto simple-form flex flex-col">
        <DataAnnotationsValidator />
        
        <div class="flex flex-col">
            <div class="form-group flex flex-row space-x-2 items-center">
                <label class="font-semibold flex-none text-lg" for="Name">Name</label>
                <InputTextOnInput class="min-w-0 md:flex-auto h-10 text-lg px-2" id="name" @bind-Value="Player.Name"/>           
            </div>
            <ValidationMessage For="() => Player.Name" />
        </div
        <div class="mt-14 flex flex-row justify-end space-x-2 items-center">
            <MainButton ButtonType="Submit" Text="Save" />
            <MainButton Text="Cancel" OnClick="ModalInstance.CancelAsync" />
        </div>
    </EditForm>
</div>


@code {

    [CascadingParameter] 
    BlazoredModalInstance ModalInstance { get; set; }

    [Parameter]
    public Player Player { get; set; }

    async Task HandleValidSubmit()
    {
        await ModalInstance.CloseAsync(ModalResult.Ok<Player>(Player));
    }
}