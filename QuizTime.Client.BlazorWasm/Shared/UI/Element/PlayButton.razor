@using BlazorState
@inherits QuizTime.Client.BlazorWasm.Shared.UI.SettingsStateComponentBase
@using QuizTime.Client.BlazorWasm.Features.Settings
@using QuizTime.Client.BlazorWasm.Shared.UI

<div class="text-@(SettingsState.ThemeColorString)-500 flex flex-col cursor-pointer hover:text-@(SettingsState.ThemeColorString)-500 @CustomClass"
    @onclick="@((args) => OnClickHandler(args))">
    <div>
        <svg class="@Dimensions stroke-current" xmlns="http://www.w3.org/2000/svg" fill="none" viewBox="0 0 24 24">
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                d="M14.752 11.168l-3.197-2.132A1 1 0 0010 9.87v4.263a1 1 0 001.555.832l3.197-2.132a1 1 0 000-1.664z" />
            <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2"
                d="M21 12a9 9 0 11-18 0 9 9 0 0118 0z" />
        </svg>
    </div>

    @if (!String.IsNullOrWhiteSpace(Text))
    {
        <span class="text-center text-4xl">@Text</span>
    }
</div>

@code
{
    [Parameter]
    public EventCallback OnClick {get; set;}

    [Parameter]
    public string Text {get; set;}

    [Parameter]
    public Size Size {get; set;}

    [Parameter]
    public string CustomClass {get; set;}
   
    private async Task OnClickHandler(MouseEventArgs e)
    {
        await OnClick.InvokeAsync(e);
    }

    private string Dimensions
    {
        get
        {
            var multiplier = 1;

            switch (Size)
            {
                case Size.ExtraSmall:
                    multiplier = 1;
                    break;
                case Size.Small:
                    multiplier = 2;
                    break;
                case Size.Medium:
                    multiplier = 3;
                    break;
                case Size.Large:
                    multiplier = 6;
                    break;
                case Size.ExtraLarge:
                    multiplier = 9;
                    break;
                default:
                    multiplier = 1;
                    break;
            }

            var w = 10 * multiplier;
            var h = 10 * multiplier;

            return $"w-{w} h={h}";
        }
    }
}    